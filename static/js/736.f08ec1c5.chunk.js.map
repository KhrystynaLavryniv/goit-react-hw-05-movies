{"version":3,"file":"static/js/736.f08ec1c5.chunk.js","mappings":"0QAEaA,EAAWC,EAAAA,GAAAA,GAAH,6CAIRC,EAAUD,EAAAA,GAAAA,IAAH,4D,SC2DpB,MA1DA,WACE,OAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IAEXE,EAAAA,EAAAA,IAAkBL,GACfM,MAAK,SAAAC,GACJ,IACUC,EACND,EADFA,KAAQC,KAKV,GAFAT,EAAYS,GAEQ,IAAhBA,EAAKC,OACP,OAAOC,EAAAA,GAAAA,MACL,kEAILC,OAAM,SAAAC,GACL,OAAOF,EAAAA,GAAAA,MACL,kEAGHG,QAAQV,GAAW,MACrB,CAACH,KAGF,gCACGE,IAAW,SAACY,EAAA,EAAD,IACXhB,IACC,SAACJ,EAAD,UACGI,EAASiB,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACZ,2BACE,0BACE,SAACvB,EAAD,CACEwB,IACED,EACI,kCAAoCA,EACpC,cAENE,IAAKJ,OAGT,4BACE,uBAAIA,IACHC,IAAa,uCAAeA,UAbxBF,a,6ECzCRM,E,QAAkB3B,GAAAA,IAAH,8F,SCS5B,EARe,WACb,OACE,UAAC2B,EAAD,YACE,SAAC,KAAD,CAAUC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAD/C,S,0MCDEC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IAD5D,0GAIA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8B9B,GAA9B,iFACQ6B,IAAAA,IAAA,UAAaH,EAAb,kBAA+B1B,EAA/B,oBAAkD2B,IAD1D,0GAIA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iFACQH,IAAAA,IAAA,UACRH,EADQ,iCACyBC,EADzB,kBAC0CK,EAD1C,yBADR,0GAMA,SAAe3B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCL,GAAjC,iFACQ6B,IAAAA,IAAA,UACRH,EADQ,kBACU1B,EADV,4BACqC2B,IAF7C,0GAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjC,GAAjC,iFACQ6B,IAAAA,IAAA,UACRH,EADQ,kBACU1B,EADV,4BACqC2B,IAF7C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.style.jsx","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastItem = styled.ul`\n  list-style: none;\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  width: 150px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../services/api';\nimport Loader from '../Loader/Loader';\nimport toast from 'react-hot-toast';\nimport { CastImg, CastItem } from './Cast.styled';\n\nfunction Cast() {\n  const [castInfo, setCastInfo] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetchMovieCredits(movieId)\n      .then(data => {\n        const {\n          data: { cast },\n        } = data;\n\n        setCastInfo(cast);\n\n        if (cast.length === 0) {\n          return toast.error(\n            \"We don't have any information about the cast for this movie\"\n          );\n        }\n      })\n      .catch(error => {\n        return toast.error(\n          \"We don't have any information about the cast for this movie\"\n        );\n      })\n      .finally(setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {castInfo && (\n        <CastItem>\n          {castInfo.map(({ cast_id, name, character, profile_path }) => (\n            <li key={cast_id}>\n              <div>\n                <CastImg\n                  src={\n                    profile_path\n                      ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                      : 'noPosterImg'\n                  }\n                  alt={name}\n                />\n              </div>\n              <div>\n                <p>{name}</p>\n                {character && <p>Character: {character}</p>}\n              </div>\n            </li>\n          ))}\n        </CastItem>\n      )}\n    </>\n  );\n}\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.style.jsx';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <TailSpin color=\"#00BFFF\" height={80} width={80} />;\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n// axios.defaults.baseURL =\n//   'https://api.themoviedb.org/3/movie/550?api_key=958a441e98a3a2e7212356a4dfcbfc32';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '958a441e98a3a2e7212356a4dfcbfc32';\n\nexport async function fetchTrandingMovies() {\n  return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport async function fetchMovieById(movieId) {\n  return await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function fetchMovieByQuery(value) {\n  return await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`\n  );\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n"],"names":["CastItem","styled","CastImg","useState","castInfo","setCastInfo","movieId","useParams","loading","setLoading","useEffect","fetchMovieCredits","then","data","cast","length","toast","catch","error","finally","Loader","map","cast_id","name","character","profile_path","src","alt","LoaderContainer","color","height","width","BASE_URL","API_KEY","fetchTrandingMovies","axios","fetchMovieById","fetchMovieByQuery","value","fetchMovieReviews"],"sourceRoot":""}